# file: roles/bind/templates/named.conf.j2
# synopsis: Bind9 main configuration file

options {
    # Working directory where all relative paths start from
    directory "/var/cache/bind";

    # Interfaces and port BIND should listen on for DNS requests
    listen-on port {{dns_port}} {
        127.0.0.1;
        {{ hostvars[groups['dns_master'][0]]['ansible_default_ipv4']['address'] if ansible_hostname == groups['dns_master'][0] else hostvars[groups['dns_slave'][0]]['ansible_default_ipv4']['address'] }};
    };
    # We're not listening for IPv6 requests
    listen-on-v6 {
      none;
    };

    # Hide version number from clients for security reasons.
    version "not currently available";
    hostname none;
    server-id none;

    # Linit to DNS cahce size to 256MB (default is 90% of RAM).
    max-cache-size 256m;

    {% if bind9_forward %}
    # Forward requests for non-auth domains
    forwarders {
        {% for forwarder in bind9_forward_servers %}
        {{forwarder}};
        {% endfor %}
    };
    {% endif%}

    # Define which clients can perform DNS queries
    allow-query { internals; };
    allow-query-cache { internals; };

    # Allow recursion DNS requests for the specified clients
    recursion yes;
    allow-recursion { internals; };

    # Notify name servers in the NS records of changes
    notify yes;
    also-notify { {{hostvars[groups['dns_slave'][0]]['ansible_default_ipv4']['address'] if ansible_hostname == groups['dns_master'][0] else hostvars[groups['dns_master'][0]]['ansible_default_ipv4']['address']}}; };

    # Define hosts that are allowed to receive zone transfers
    allow-transfer { {{hostvars[groups['dns_slave'][0]]['ansible_default_ipv4']['address'] if ansible_hostname == groups['dns_master'][0] else hostvars[groups['dns_master'][0]]['ansible_default_ipv4']['address'] }}; };

    # Only our DHCP/DNS servers are allowed to perform dynamic updates
    allow-update {
        localhost;
        {{hostvars[groups['dns_master'][0]]['ansible_default_ipv4']['address']}};
        {{hostvars[groups['dns_slave'][0]]['ansible_default_ipv4']['address']}};
    };

    # Don't give authoritative NXDOMAIN answer for non-authoritative domains
    auth-nxdomain no;       # conform to RFC1035

    dnssec-validation auto;

    # Don't scan net for changed interfaces
    # From 9.9.5 ARM, disables interfaces scanning to prevent unwanted stop listening.
    interface-interval 0;

    # Flush pending zone writes on exit
    flush-zones-on-shutdown yes;
};

# Define our local networks
acl internals {
  localnets;
  127.0.0.1;
  {% for cidr in internal_networks %}
  {{cidr}};
  {% endfor %}
};

logging {
    channel default_syslog {
        file "/var/log/named/bind.log" versions 3 size 5m;
        print-time yes;
        print-category yes;
        print-severity yes;
        severity info;
        #syslog daemon;
    };
    channel default_debug {
        print-time yes;
        print-category yes;
        print-severity yes;
        syslog daemon;
        severity dynamic;
    };
    category default  { default_syslog; };
    category config   { default_syslog; default_debug; };
    category dispatch { default_syslog; default_debug; };
    category network  { default_syslog; default_debug; };
    category general  { default_syslog; };
};

include "/etc/bind/rndc.key";

# Allow rndc management
controls {
    inet 127.0.0.1 port {{dns_sync_port}} allow {
        127.0.0.1;
        {{hostvars[groups['dns_master'][0]]['ansible_default_ipv4']['address']}};
        {{hostvars[groups['dns_slave'][0]]['ansible_default_ipv4']['address']}};
    } keys { "rndc-key"; };
};

# Zone definitions for this DNS server
zone {{search_domain}} {
{% if ansible_hostname == groups['dns_master'][0] %}
    type master;
    allow-update { key rndc-key; };
    allow-transfer { {{hostvars[groups['dns_slave'][0]]['ansible_default_ipv4']['address']}}; };
{% else %}
    type slave;
    masterfile-format text;
    masters { {{hostvars[groups['dns_master'][0]]['ansible_default_ipv4']['address']}}; };
    allow-update-forwarding { {{hostvars[groups['dns_master'][0]]['ansible_default_ipv4']['address']}}; };
{% endif %}
    notify yes;
    allow-query { any; };
    file "/var/lib/bind/db.{{search_domain}}";
    journal "/var/lib/bind/db.{{search_domain}}.jnl";
};

zone 10.in-addr.arpa {
{% if ansible_hostname == groups['dns_master'][0] %}
    type master;
    allow-update { key rndc-key; };
    allow-transfer { {{hostvars[groups['dns_slave'][0]]['ansible_default_ipv4']['address']}}; };
{% else %}
    type slave;
    masters { {{hostvars[groups['dns_master'][0]]['ansible_default_ipv4']['address']}}; };
    allow-update-forwarding { {{hostvars[groups['dns_master'][0]]['ansible_default_ipv4']['address']}}; };
{% endif %}
    notify yes;
    allow-query { any; };
    file "/var/lib/bind/db.{{search_domain}}.rev";
    journal "/var/lib/bind/db.{{search_domain}}.rev.jnl";
};

# prime the server with knowledge of the root servers
# If BIND logs error messages about the root key being expired,
# you will need to update your keys.  See https://www.isc.org/bind-keys
zone "." {
        type hint;
        file "/usr/share/dns/root.hints";
};

# Be authoritative for the localhost forward and reverse zones, and for broadcast zones as per RFC 1912
zone localhost {
    type primary;
    file "/etc/bind/db.local";
    notify no;
    allow-update { localhost; };
};

zone 127.in-addr.arpa {
    type primary;
    file "/etc/bind/db.127";
    notify no;
    allow-update { localhost; };
};

zone 0.in-addr.arpa {
    type primary;
    file "/etc/bind/db.0";
    notify no;
    allow-update { localhost; };
};

zone 255.in-addr.arpa {
    type primary;
    file "/etc/bind/db.255";
    notify no;
    allow-update { localhost; };
};

### #TODO: Define the chaos zone
##view "chaos" chaos  {
##  recursion no;
##  notify no;
##  allow-new-zones no;
##  max-cache-size 2M;
##
##  # Prevent use of this zone in DNS amplified reflection DoS attacks
##  rate-limit {
##    responses-per-second 3;
##    slip 0;
##    min-table-size 10;
##  };
##
##  zone "bind" chaos {
##    type primary;
##    file "/etc/bind/db.bind";
##    allow-update { none; };
##  };
##
##  zone "server" chaos {
##    type primary;
##    file "/etc/bind/db.server";
##    allow-update { none; };
##  };
##};
